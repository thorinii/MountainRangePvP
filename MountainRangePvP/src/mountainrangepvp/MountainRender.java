/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mountainrangepvp;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;

/**
 *
 * @author lachlan
 */
public class MountainRender extends javax.swing.JPanel {

    private static final double P = 3;
    private static final double OCTAVES = 4;
    private int seed;

    /**
     * Creates new form MountainRender
     */
    public MountainRender() {
        initComponents();

        seed = 1;

        setBackground(Color.WHITE);
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);

        int width = getWidth();
        int height = getHeight();

        g.setColor(Color.BLACK);
        for (int x = 0; x < width; x++) {
            int noise = mountain(x);

            g.fillRect(x, noise, 1, height);
        }

        g.setColor(Color.RED);
        g.setFont(new Font("Arial", Font.PLAIN, 30));
        g.drawString("Mountain Generator", 50, height - 50);
    }

    private int mountain(int x) {
        float noise = 50;

        //System.out.println(InterpolatedNoise1(x / 5f));

        noise += InterpolatedNoise1(x / 300f) * 4000;
        noise += InterpolatedNoise1(x / 30f) * 3000;
        noise += InterpolatedNoise1(x / 15f) * 2000;
        noise += InterpolatedNoise1(x / 10f) * 700;
        noise += InterpolatedNoise1(x / 5f) * 300;
        noise += InterpolatedNoise1(x / 2f) * 100;
        noise += InterpolatedNoise1(x / 1f) * 80;
        noise += InterpolatedNoise1(x / 0.5f) * 20;

        return (int) noise;
    }

    private float Noise1(int x) {
        x = (x << 13) ^ x;
        return Math.abs(
                1.0f - ((seed * x * (x * x * 15731 + 789221) + 1376312589) & 0x7ffffff) / 1073741824.0f);
    }

    private float Noise1(float x) {
        return Noise1((int) x);
    }

    private float SmoothedNoise1(float x) {
        return Noise1(x) / 2 + Noise1(x - 1) / 4 + Noise1(x + 1) / 4;
    }

    private float InterpolatedNoise1(float x) {
        int integer_X = (int) x;
        float fractional_X = x - integer_X;

        float v1 = SmoothedNoise1(integer_X);
        float v2 = SmoothedNoise1(integer_X + 1);

        return Interpolate(v1, v2, fractional_X) - 0.9f;
    }

    private float PerlinNoise_1D(float x) {
        float total = 0;

        for (int i = 0; i < OCTAVES; i++) {
            float frequency = (float) Math.pow(2, i);
            float amplitude = (float) Math.pow(P, i);

            total = total + InterpolatedNoise1(x * frequency) * amplitude;

        }

        return total;
    }

    private float Interpolate(float a, float b, float x) {
        return a * (1 - x) + b * x;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
